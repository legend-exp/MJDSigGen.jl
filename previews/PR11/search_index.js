var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"DocTestSetup  = quote\n    using MJDSigGen\nend","category":"page"},{"location":"api/#Modules","page":"API","title":"Modules","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:module]","category":"page"},{"location":"api/#Types-and-constants","page":"API","title":"Types and constants","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:type, :constant]","category":"page"},{"location":"api/#Functions-and-macros","page":"API","title":"Functions and macros","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:macro, :function]","category":"page"},{"location":"api/#Documentation","page":"API","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [MJDSigGen]\nOrder = [:module, :type, :constant, :macro, :function]","category":"page"},{"location":"api/#MJDSigGen.nearest_field_grid_index-Tuple{SigGenSetup,Tuple{Real,Real,Real}}","page":"API","title":"MJDSigGen.nearest_field_grid_index","text":"nearest_field_grid_index(setup::SigGenSetup, location::NTuple{3, Real})\n\nReturns:\n\n(:outside, i, j), if outside crystal or too far from a valid grid point\n(:interpol, i, j, if interpolation is okay\n(:extrapol, i, j), if we can find a point but extrapolation is needed\n\n\n\n\n\n","category":"method"},{"location":"LICENSE/#LICENSE","page":"LICENSE","title":"LICENSE","text":"","category":"section"},{"location":"LICENSE/","page":"LICENSE","title":"LICENSE","text":"using Markdown\nMarkdown.parse_file(joinpath(@__DIR__, \"..\", \"..\", \"LICENSE.md\"))","category":"page"},{"location":"#MJDSigGen.jl","page":"Home","title":"MJDSigGen.jl","text":"","category":"section"}]
}
